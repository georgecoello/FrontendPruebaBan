{"ast":null,"code":"import NavBar from '../components/Nav.vue';\nimport FooterPage from '../components/Footer.vue';\nimport axios from 'axios';\nexport default {\n  name: 'MantenimientosPage',\n  components: {\n    NavBar,\n    FooterPage\n  },\n  data() {\n    return {\n      tabActual: 'canalesServicio',\n      // Pestaña activa\n      canalesServicio: [],\n      // Lista de canales de servicio\n      agencias: [],\n      // Lista de agencias\n      tiposCliente: [],\n      // Lista de tipos de cliente\n      tiposTransaccion: [] // Lista de tipos de transacción\n    };\n  },\n  async created() {\n    await this.cargarDatos();\n  },\n  methods: {\n    async cargarDatos() {\n      const token = localStorage.getItem('token');\n      try {\n        // Cargar canales de servicio\n        const responseCanales = await axios.get('http://127.0.0.1:8000/api/canales-servicio/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.canalesServicio = responseCanales.data;\n\n        // Cargar agencias\n        const responseAgencias = await axios.get('http://127.0.0.1:8000/api/agencias/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.agencias = responseAgencias.data;\n\n        // Cargar tipos de cliente\n        const responseTiposCliente = await axios.get('http://127.0.0.1:8000/api/tipos-cliente/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.tiposCliente = responseTiposCliente.data;\n\n        // Cargar tipos de transacción\n        const responseTiposTransaccion = await axios.get('http://127.0.0.1:8000/api/tipos-transaccion/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.tiposTransaccion = responseTiposTransaccion.data;\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n      }\n    },\n    mostrarFormularioCrearCanal() {\n      // Lógica para mostrar formulario de creación de canal\n    },\n    editarCanal(canal) {\n      console.log(canal);\n    },\n    eliminarCanal(id) {\n      console.log(id);\n    },\n    mostrarFormularioCrearAgencia() {\n      // Lógica para mostrar formulario de creación de agencia\n    },\n    editarAgencia(agencia) {\n      console.log(agencia);\n    },\n    eliminarAgencia(id) {\n      console.log(id);\n    },\n    mostrarFormularioCrearTipoCliente() {\n      // Lógica para mostrar formulario de creación de tipo de cliente\n    },\n    editarTipoCliente(tipo) {\n      console.log(tipo);\n    },\n    eliminarTipoCliente(id) {\n      console.log(id);\n    },\n    mostrarFormularioCrearTipoTransaccion() {\n      // Lógica para mostrar formulario de creación de tipo de transacción\n    },\n    editarTipoTransaccion(tipo) {\n      console.log(tipo);\n    },\n    eliminarTipoTransaccion(id) {\n      console.log(canal);\n    }\n  }\n};","map":{"version":3,"names":["NavBar","FooterPage","axios","name","components","data","tabActual","canalesServicio","agencias","tiposCliente","tiposTransaccion","created","cargarDatos","methods","token","localStorage","getItem","responseCanales","get","headers","Authorization","responseAgencias","responseTiposCliente","responseTiposTransaccion","error","console","mostrarFormularioCrearCanal","editarCanal","canal","log","eliminarCanal","id","mostrarFormularioCrearAgencia","editarAgencia","agencia","eliminarAgencia","mostrarFormularioCrearTipoCliente","editarTipoCliente","tipo","eliminarTipoCliente","mostrarFormularioCrearTipoTransaccion","editarTipoTransaccion","eliminarTipoTransaccion"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/views/Mantenimiento.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-100\">\n      <!-- NavBar -->\n      <NavBar />\n  \n      <!-- Contenido Principal -->\n      <div class=\"container mx-auto p-4\">\n        <h1 class=\"text-3xl font-bold text-green-800 mb-4\">Mantenimientos</h1>\n  \n        <!-- Tabs para seleccionar la tabla a gestionar -->\n        <div class=\"mb-4\">\n          <button\n            @click=\"tabActual = 'canalesServicio'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'canalesServicio',\n              'bg-white text-green-800': tabActual !== 'canalesServicio',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Canales de Servicio\n          </button>\n          <button\n            @click=\"tabActual = 'agencias'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'agencias',\n              'bg-white text-green-800': tabActual !== 'agencias',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Agencias\n          </button>\n          <button\n            @click=\"tabActual = 'tiposCliente'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposCliente',\n              'bg-white text-green-800': tabActual !== 'tiposCliente',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Cliente\n          </button>\n          <button\n            @click=\"tabActual = 'tiposTransaccion'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposTransaccion',\n              'bg-white text-green-800': tabActual !== 'tiposTransaccion',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Transacción\n          </button>\n        </div>\n  \n        <!-- Tabla de Canales de Servicio -->\n        <div v-if=\"tabActual === 'canalesServicio'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Canales de Servicio</h2>\n          <button @click=\"mostrarFormularioCrearCanal\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Canal\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"canal in canalesServicio\" :key=\"canal.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ canal.codigoCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ canal.nombreCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"editarCanal(canal)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarCanal(canal.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Agencias -->\n        <div v-if=\"tabActual === 'agencias'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Agencias</h2>\n          <button @click=\"mostrarFormularioCrearAgencia\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nueva Agencia\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"agencia in agencias\" :key=\"agencia.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ agencia.codigoAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ agencia.nombreAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"editarAgencia(agencia)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarAgencia(agencia.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Tipos de Cliente -->\n        <div v-if=\"tabActual === 'tiposCliente'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Tipos de Cliente</h2>\n          <button @click=\"mostrarFormularioCrearTipoCliente\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Tipo\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"tipo in tiposCliente\" :key=\"tipo.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ tipo.codigoTipoCliente }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ tipo.nombreTipoCliente }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"editarTipoCliente(tipo)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarTipoCliente(tipo.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Tipos de Transacción -->\n        <div v-if=\"tabActual === 'tiposTransaccion'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Tipos de Transacción</h2>\n          <button @click=\"mostrarFormularioCrearTipoTransaccion\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Tipo\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"tipo in tiposTransaccion\" :key=\"tipo.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ tipo.codigoTipoTransaccion }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ tipo.nombreTipoTransaccion }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"editarTipoTransaccion(tipo)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarTipoTransaccion(tipo.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n  \n      <!-- Footer -->\n      <FooterPage />\n    </div>\n  </template>\n  \n  <script>\n  import NavBar from '../components/Nav.vue';\n  import FooterPage from '../components/Footer.vue';\n  import axios from 'axios';\n  \n  export default {\n    name: 'MantenimientosPage',\n    components: {\n      NavBar,\n      FooterPage,\n    },\n    data() {\n      return {\n        tabActual: 'canalesServicio', // Pestaña activa\n        canalesServicio: [], // Lista de canales de servicio\n        agencias: [], // Lista de agencias\n        tiposCliente: [], // Lista de tipos de cliente\n        tiposTransaccion: [], // Lista de tipos de transacción\n      };\n    },\n    async created() {\n      await this.cargarDatos();\n    },\n    methods: {\n      async cargarDatos() {\n        const token = localStorage.getItem('token');\n        try {\n          // Cargar canales de servicio\n          const responseCanales = await axios.get('http://127.0.0.1:8000/api/canales-servicio/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.canalesServicio = responseCanales.data;\n  \n          // Cargar agencias\n          const responseAgencias = await axios.get('http://127.0.0.1:8000/api/agencias/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.agencias = responseAgencias.data;\n  \n          // Cargar tipos de cliente\n          const responseTiposCliente = await axios.get('http://127.0.0.1:8000/api/tipos-cliente/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.tiposCliente = responseTiposCliente.data;\n  \n          // Cargar tipos de transacción\n          const responseTiposTransaccion = await axios.get('http://127.0.0.1:8000/api/tipos-transaccion/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.tiposTransaccion = responseTiposTransaccion.data;\n        } catch (error) {\n          console.error('Error al cargar datos:', error);\n        }\n      },\n      mostrarFormularioCrearCanal() {\n        // Lógica para mostrar formulario de creación de canal\n      },\n      editarCanal(canal) {\n        console.log(canal);\n      },\n      eliminarCanal(id) {\n        console.log(id);\n      },\n      mostrarFormularioCrearAgencia() {\n        // Lógica para mostrar formulario de creación de agencia\n      },\n      editarAgencia(agencia) {\n        console.log(agencia);\n      },\n      eliminarAgencia(id) {\n        console.log(id);\n      },\n      mostrarFormularioCrearTipoCliente() {\n        // Lógica para mostrar formulario de creación de tipo de cliente\n      },\n      editarTipoCliente(tipo) {\n        console.log(tipo);\n      },\n      eliminarTipoCliente(id) {\n        console.log(id);\n      },\n      mostrarFormularioCrearTipoTransaccion() {\n        // Lógica para mostrar formulario de creación de tipo de transacción\n      },\n      editarTipoTransaccion(tipo) {\n        console.log(tipo);\n      },\n      eliminarTipoTransaccion(id) {\n        console.log(canal);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Estilos personalizados si es necesario */\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}