{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport NavBar from \"../components/Nav.vue\";\nimport FooterPage from \"../components/Footer.vue\";\nexport default {\n  name: \"ProjectView\",\n  components: {\n    NavBar,\n    FooterPage\n  },\n  setup() {\n    const searchQuery = ref(\"\"); // Para la búsqueda\n    const emails = ref([]); // Lista de correos\n    const selectedEmailBody = ref(\"\"); // Cuerpo del email seleccionado\n\n    // Función para obtener todos los correos (carga inicial)\n    const fetchEmails = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8081/search?q=*\"); // Buscar todos los correos\n        emails.value = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener los correos:\", error);\n      }\n    };\n\n    // Función para buscar correos con filtro\n    const searchEmails = async () => {\n      try {\n        const query = searchQuery.value.trim();\n        const response = await axios.get(`http://localhost:8081/search?q=${query || \"*\"}`); // Si está vacío, traer todos\n        emails.value = response.data;\n      } catch (error) {\n        console.error(\"Error al buscar los correos:\", error);\n      }\n    };\n\n    // Función para seleccionar un correo y mostrar su cuerpo\n    const selectEmail = email => {\n      selectedEmailBody.value = email.body || \"No message available\"; // Si no hay cuerpo, mostrar mensaje predeterminado\n    };\n\n    // Cargar correos al montar el componente\n    onMounted(fetchEmails);\n    return {\n      searchQuery,\n      emails,\n      searchEmails,\n      selectedEmailBody,\n      selectEmail\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","NavBar","FooterPage","name","components","setup","searchQuery","emails","selectedEmailBody","fetchEmails","response","get","value","data","error","console","searchEmails","query","trim","selectEmail","email","body"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/views/Project.vue"],"sourcesContent":["<template>\n    <NavBar class=\"fixed bg-white text-green shadow-lg w-full z-50\" />\n    <div class=\"min-h-screen flex flex-col justify-center items-center overflow-hidden\">\n        <h1 class=\"font-bold text-center text-green-800 mb-20 text-4xl\">Mail</h1>\n\n        <!-- Barra de búsqueda -->\n        <div class=\"relative w-full mx-4 flex justify-center\">\n            <input \n                type=\"text\" \n                placeholder=\"Buscar...\" \n                v-model=\"searchQuery\"\n                @keyup.enter=\"searchEmails\"\n                class=\"w-1/2 pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700\"\n            />\n            <div class=\"absolute inset-y-0 left-[calc(25%+12px)] flex items-center pointer-events-none\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-700\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1111.69 3.635l3.387 3.387a1 1 0 01-1.414 1.414l-3.387-3.387A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n        </div>\n\n        <!-- Tabla y mensaje a la par -->\n        <div class=\"flex items-start space-x-6 mt-10\">\n            <!-- Tabla de correos -->\n            <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg w-2/3\">\n                <table class=\"w-full text-sm text-left text-gray-600 dark:text-gray-300\">\n                    <thead class=\"text-xs uppercase bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300\">\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3\">Subject</th>\n                            <th scope=\"col\" class=\"px-6 py-3\">From</th>\n                            <th scope=\"col\" class=\"px-6 py-3\">To</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr \n                            v-for=\"(email, index) in emails\" \n                            :key=\"index\" \n                            @click=\"selectEmail(email)\" \n                            class=\"bg-white border-b hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700 cursor-pointer\"\n                        >\n                            <td class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">{{ email.subject }}</td>\n                            <td class=\"px-6 py-4\">{{ email.from }}</td>\n                            <td class=\"px-6 py-4\">{{ email.to }}</td>\n                        </tr>\n                        <tr v-if=\"emails.length === 0\">\n                            <td colspan=\"3\" class=\"px-6 py-4 text-center text-gray-500\">No results found</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <!-- Input para Body Message -->\n            <div class=\"w-1/3\">\n                <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Body Message:</label>\n                <textarea \n                    v-model=\"selectedEmailBody\" \n                    class=\"w-full h-40 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700\"\n                    readonly\n                ></textarea>\n            </div>\n        </div>\n    </div>\n    <FooterPage/>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport NavBar from \"../components/Nav.vue\";\nimport FooterPage from \"../components/Footer.vue\";\n\nexport default {\n    name: \"ProjectView\",\n    components: { NavBar, FooterPage },\n    setup() {\n        const searchQuery = ref(\"\");  // Para la búsqueda\n        const emails = ref([]);  // Lista de correos\n        const selectedEmailBody = ref(\"\");  // Cuerpo del email seleccionado\n\n        // Función para obtener todos los correos (carga inicial)\n        const fetchEmails = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:8081/search?q=*\"); // Buscar todos los correos\n                emails.value = response.data;\n            } catch (error) {\n                console.error(\"Error al obtener los correos:\", error);\n            }\n        };\n\n        // Función para buscar correos con filtro\n        const searchEmails = async () => {\n            try {\n                const query = searchQuery.value.trim();\n                const response = await axios.get(`http://localhost:8081/search?q=${query || \"*\"}`); // Si está vacío, traer todos\n                emails.value = response.data;\n            } catch (error) {\n                console.error(\"Error al buscar los correos:\", error);\n            }\n        };\n\n        // Función para seleccionar un correo y mostrar su cuerpo\n        const selectEmail = (email) => {\n            selectedEmailBody.value = email.body || \"No message available\";  // Si no hay cuerpo, mostrar mensaje predeterminado\n        };\n\n        // Cargar correos al montar el componente\n        onMounted(fetchEmails);\n\n        return { searchQuery, emails, searchEmails, selectedEmailBody, selectEmail };\n    }\n};\n</script>\n"],"mappings":"AAkEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,MAAK,MAAO,uBAAuB;AAC1C,OAAOC,UAAS,MAAO,0BAA0B;AAEjD,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEH,MAAM;IAAEC;EAAW,CAAC;EAClCG,KAAKA,CAAA,EAAG;IACJ,MAAMC,WAAU,GAAIP,GAAG,CAAC,EAAE,CAAC,EAAG;IAC9B,MAAMQ,MAAK,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAG;IACzB,MAAMS,iBAAgB,GAAIT,GAAG,CAAC,EAAE,CAAC,EAAG;;IAEpC;IACA,MAAMU,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,kCAAkC,CAAC,EAAE;QACtEJ,MAAM,CAACK,KAAI,GAAIF,QAAQ,CAACG,IAAI;MAChC,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;;IAED;IACA,MAAME,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,KAAI,GAAIX,WAAW,CAACM,KAAK,CAACM,IAAI,CAAC,CAAC;QACtC,MAAMR,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,kCAAkCM,KAAI,IAAK,GAAG,EAAE,CAAC,EAAE;QACpFV,MAAM,CAACK,KAAI,GAAIF,QAAQ,CAACG,IAAI;MAChC,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;;IAED;IACA,MAAMK,WAAU,GAAKC,KAAK,IAAK;MAC3BZ,iBAAiB,CAACI,KAAI,GAAIQ,KAAK,CAACC,IAAG,IAAK,sBAAsB,EAAG;IACrE,CAAC;;IAED;IACArB,SAAS,CAACS,WAAW,CAAC;IAEtB,OAAO;MAAEH,WAAW;MAAEC,MAAM;MAAES,YAAY;MAAER,iBAAiB;MAAEW;IAAY,CAAC;EAChF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}