{"ast":null,"code":"export default {\n  name: 'AppModal',\n  props: {\n    formulario: {\n      type: Object,\n      required: true\n    },\n    esEdicion: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localFormulario: {\n        ...this.formulario\n      }\n    };\n  },\n  watch: {\n    formulario: {\n      handler(newVal) {\n        this.localFormulario = {\n          ...newVal\n        };\n      },\n      deep: true\n    }\n  },\n  methods: {\n    handleSubmit() {\n      // Verificar que idUsuario no sea null\n      if (this.localFormulario.idUsuario === null || this.localFormulario.idUsuario === '') {\n        alert('El campo ID Usuario es obligatorio.');\n        return;\n      }\n\n      // Convertir idUsuario a número (si es necesario)\n      this.localFormulario.idUsuario = Number(this.localFormulario.idUsuario);\n\n      // Emitir el evento para guardar el formulario\n      this.$emit('update:formulario', this.localFormulario);\n    },\n    closeModal() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["name","props","formulario","type","Object","required","esEdicion","Boolean","default","data","localFormulario","watch","handler","newVal","deep","methods","handleSubmit","idUsuario","alert","Number","$emit","closeModal"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/components/Modal.vue"],"sourcesContent":["<template>\n    <div class=\"modal-overlay\" @click.self=\"closeModal\">\n      <div class=\"modal-content\">\n        <h2 class=\"modal-title\">{{ esEdicion ? 'Editar Canal' : 'Crear Canal' }}</h2>\n        <form @submit.prevent=\"handleSubmit\" class=\"modal-form\">\n          <div class=\"form-group\">\n            <label for=\"codigo\" class=\"form-label\">Código</label>\n            <input\n              id=\"codigo\"\n              v-model=\"localFormulario.codigoCanalServicio\"\n              type=\"text\"\n              class=\"form-input\"\n              placeholder=\"Ingrese el código\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"nombre\" class=\"form-label\">Nombre</label>\n            <input\n              id=\"nombre\"\n              v-model=\"localFormulario.nombreCanalServicio\"\n              type=\"text\"\n              class=\"form-input\"\n              placeholder=\"Ingrese el nombre\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"idUsuario\" class=\"form-label\">ID Usuario</label>\n            <input\n              id=\"idUsuario\"\n              v-model.number=\"localFormulario.idUsuario\" \n              type=\"number\"\n              class=\"form-input\"\n              placeholder=\"Ingrese el ID del usuario\"\n              required\n            />\n          </div>\n          <div class=\"modal-actions\">\n            <button type=\"button\" @click=\"closeModal\" class=\"modal-button cancel-button\">\n              Cancelar\n            </button>\n            <button type=\"submit\" class=\"modal-button submit-button\">\n              {{ esEdicion ? 'Guardar Cambios' : 'Crear Canal' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'AppModal',\n    props: {\n      formulario: {\n        type: Object,\n        required: true,\n      },\n      esEdicion: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        localFormulario: { ...this.formulario },\n      };\n    },\n    watch: {\n      formulario: {\n        handler(newVal) {\n          this.localFormulario = { ...newVal };\n        },\n        deep: true,\n      },\n    },\n    methods: {\n      handleSubmit() {\n        // Verificar que idUsuario no sea null\n        if (this.localFormulario.idUsuario === null || this.localFormulario.idUsuario === '') {\n          alert('El campo ID Usuario es obligatorio.');\n          return;\n        }\n  \n        // Convertir idUsuario a número (si es necesario)\n        this.localFormulario.idUsuario = Number(this.localFormulario.idUsuario);\n  \n        // Emitir el evento para guardar el formulario\n        this.$emit('update:formulario', this.localFormulario);\n      },\n      closeModal() {\n        this.$emit('close');\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Fondo oscuro semi-transparente */\n  .modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n    backdrop-filter: blur(5px); /* Efecto de desenfoque */\n  }\n  \n  /* Contenedor de la modal */\n  .modal-content {\n    background-color: white;\n    padding: 2rem;\n    border-radius: 12px;\n    width: 100%;\n    max-width: 400px;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n    animation: modalFadeIn 0.3s ease-out;\n  }\n  \n  /* Animación de entrada */\n  @keyframes modalFadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  /* Título de la modal */\n  .modal-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #2d3748;\n    margin-bottom: 1.5rem;\n    text-align: center;\n  }\n  \n  /* Formulario dentro de la modal */\n  .modal-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  /* Grupo de campos del formulario */\n  .form-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  \n  /* Etiquetas de los campos */\n  .form-label {\n    font-size: 0.875rem;\n    color: #4a5568;\n    font-weight: 500;\n  }\n  \n  /* Campos de entrada */\n  .form-input {\n    padding: 0.75rem;\n    border: 1px solid #e2e8f0;\n    border-radius: 8px;\n    font-size: 0.875rem;\n    color: #2d3748;\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  }\n  \n  .form-input:focus {\n    border-color: #4299e1;\n    box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);\n    outline: none;\n  }\n  \n  /* Botones de la modal */\n  .modal-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 1rem;\n    margin-top: 1.5rem;\n  }\n  \n  /* Estilos base para los botones */\n  .modal-button {\n    padding: 0.75rem 1.5rem;\n    border: none;\n    border-radius: 8px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 0.3s ease, transform 0.2s ease;\n  }\n  \n  /* Botón de cancelar */\n  .cancel-button {\n    background-color: #e2e8f0;\n    color: #4a5568;\n  }\n  \n  .cancel-button:hover {\n    background-color: #cbd5e0;\n    transform: translateY(-1px);\n  }\n  \n  /* Botón de guardar */\n  .submit-button {\n    background-color: #4299e1;\n    color: white;\n  }\n  \n  .submit-button:hover {\n    background-color: #3182ce;\n    transform: translateY(-1px);\n  }\n  </style>"],"mappings":"AAoDE,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QAAE,GAAG,IAAI,CAACR;MAAW;IACxC,CAAC;EACH,CAAC;EACDS,KAAK,EAAE;IACLT,UAAU,EAAE;MACVU,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACH,eAAc,GAAI;UAAE,GAAGG;QAAO,CAAC;MACtC,CAAC;MACDC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,IAAI,CAACN,eAAe,CAACO,SAAQ,KAAM,IAAG,IAAK,IAAI,CAACP,eAAe,CAACO,SAAQ,KAAM,EAAE,EAAE;QACpFC,KAAK,CAAC,qCAAqC,CAAC;QAC5C;MACF;;MAEA;MACA,IAAI,CAACR,eAAe,CAACO,SAAQ,GAAIE,MAAM,CAAC,IAAI,CAACT,eAAe,CAACO,SAAS,CAAC;;MAEvE;MACA,IAAI,CAACG,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACV,eAAe,CAAC;IACvD,CAAC;IACDW,UAAUA,CAAA,EAAG;MACX,IAAI,CAACD,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}