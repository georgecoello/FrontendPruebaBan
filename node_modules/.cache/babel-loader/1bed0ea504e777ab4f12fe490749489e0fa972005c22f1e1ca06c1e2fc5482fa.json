{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport NavBar from '../components/Nav.vue';\nimport FooterPage from '../components/Footer.vue';\nimport AppModal from '../components/Modal.vue';\nimport axios from 'axios';\nexport default {\n  name: 'MantenimientosPage',\n  components: {\n    NavBar,\n    FooterPage,\n    AppModal\n  },\n  data() {\n    return {\n      tabActual: 'canalesServicio',\n      // Pestaña activa\n      canalesServicio: [],\n      // Lista de canales de servicio\n      mostrarModal: false,\n      // Controla la visibilidad del modal\n      esEdicion: false,\n      // Indica si el modal está en modo edición\n      formularioActual: {\n        id: null,\n        codigoCanalServicio: '',\n        nombreCanalServicio: '',\n        idUsuario: 'admin' // Valor por defecto\n      }\n    };\n  },\n  async created() {\n    await this.cargarDatos();\n  },\n  methods: {\n    async cargarDatos() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/canales-servicio/');\n        this.canalesServicio = response.data;\n      } catch (error) {\n        console.error('Error al cargar los datos:', error);\n      }\n    },\n    abrirModalCrear() {\n      this.esEdicion = false;\n      this.formularioActual = {\n        id: null,\n        codigoCanalServicio: '',\n        nombreCanalServicio: '',\n        idUsuario: 'admin' // Valor por defecto\n      };\n      this.mostrarModal = true;\n    },\n    abrirModalEditar(canal) {\n      this.esEdicion = true;\n      this.formularioActual = {\n        ...canal\n      };\n      this.mostrarModal = true;\n    },\n    async guardarCanal(formulario) {\n      try {\n        if (this.esEdicion) {\n          // Actualizar canal existente\n          await axios.put(`http://127.0.0.1:8000/api/canales-servicio/${formulario.id}/`, formulario);\n        } else {\n          // Crear nuevo canal\n          await axios.post('http://127.0.0.1:8000/api/canales-servicio/', formulario);\n        }\n\n        // Recargar los datos después de guardar\n        await this.cargarDatos();\n        this.mostrarModal = false;\n      } catch (error) {\n        console.error('Error al guardar el canal:', error);\n        if (error.response) {\n          alert(`Error: ${JSON.stringify(error.response.data)}`);\n        } else {\n          alert('Ocurrió un error inesperado.');\n        }\n      }\n    },\n    async eliminarCanal(id) {\n      if (confirm('¿Estás seguro de que deseas eliminar este canal?')) {\n        try {\n          await axios.delete(`http://127.0.0.1:8000/api/canales-servicio/${id}/`);\n          // Eliminar el canal de la lista\n          this.canalesServicio = this.canalesServicio.filter(c => c.id !== id);\n        } catch (error) {\n          console.error('Error al eliminar el canal:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","FooterPage","AppModal","axios","name","components","data","tabActual","canalesServicio","mostrarModal","esEdicion","formularioActual","id","codigoCanalServicio","nombreCanalServicio","idUsuario","created","cargarDatos","methods","response","get","error","console","abrirModalCrear","abrirModalEditar","canal","guardarCanal","formulario","put","post","alert","JSON","stringify","eliminarCanal","confirm","delete","filter","c"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/views/Mantenimiento.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-100\">\n      <!-- NavBar -->\n      <NavBar />\n  \n      <!-- Contenido Principal -->\n      <div class=\"container mx-auto p-4\">\n        <h1 class=\"text-3xl font-bold text-green-800 mb-4\">Mantenimientos</h1>\n  \n        <!-- Tabs para seleccionar la tabla a gestionar -->\n        <div class=\"mb-4\">\n          <button\n            @click=\"tabActual = 'canalesServicio'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'canalesServicio',\n              'bg-white text-green-800': tabActual !== 'canalesServicio',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Canales de Servicio\n          </button>\n          <button\n            @click=\"tabActual = 'agencias'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'agencias',\n              'bg-white text-green-800': tabActual !== 'agencias',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Agencias\n          </button>\n          <button\n            @click=\"tabActual = 'tiposCliente'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposCliente',\n              'bg-white text-green-800': tabActual !== 'tiposCliente',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Cliente\n          </button>\n          <button\n            @click=\"tabActual = 'tiposTransaccion'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposTransaccion',\n              'bg-white text-green-800': tabActual !== 'tiposTransaccion',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Transacción\n          </button>\n        </div>\n  \n        <!-- Tabla de Canales de Servicio -->\n        <div v-if=\"tabActual === 'canalesServicio'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Canales de Servicio</h2>\n          <button @click=\"abrirModalCrear\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Canal\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"canal in canalesServicio\" :key=\"canal.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ canal.codigoCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ canal.nombreCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"abrirModalEditar(canal)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarCanal(canal.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Modal para crear o editar un canal de servicio -->\n        <AppModal\n          v-if=\"mostrarModal\"\n          :formulario=\"formularioActual\"\n          :esEdicion=\"esEdicion\"\n          @update:formulario=\"guardarCanal\"\n          @close=\"mostrarModal = false\"\n        />\n      </div>\n  \n      <!-- Footer -->\n      <FooterPage />\n    </div>\n  </template>\n  \n  <script>\n  import NavBar from '../components/Nav.vue';\n  import FooterPage from '../components/Footer.vue';\n  import AppModal from '../components/Modal.vue';\n  import axios from 'axios';\n  \n  export default {\n    name: 'MantenimientosPage',\n    components: {\n      NavBar,\n      FooterPage,\n      AppModal,\n    },\n    data() {\n      return {\n        tabActual: 'canalesServicio', // Pestaña activa\n        canalesServicio: [], // Lista de canales de servicio\n        mostrarModal: false, // Controla la visibilidad del modal\n        esEdicion: false, // Indica si el modal está en modo edición\n        formularioActual: {\n          id: null,\n          codigoCanalServicio: '',\n          nombreCanalServicio: '',\n          idUsuario: 'admin', // Valor por defecto\n        },\n      };\n    },\n    async created() {\n      await this.cargarDatos();\n    },\n    methods: {\n      async cargarDatos() {\n        try {\n          const response = await axios.get('http://127.0.0.1:8000/api/canales-servicio/');\n          this.canalesServicio = response.data;\n        } catch (error) {\n          console.error('Error al cargar los datos:', error);\n        }\n      },\n      abrirModalCrear() {\n        this.esEdicion = false;\n        this.formularioActual = {\n          id: null,\n          codigoCanalServicio: '',\n          nombreCanalServicio: '',\n          idUsuario: 'admin', // Valor por defecto\n        };\n        this.mostrarModal = true;\n      },\n      abrirModalEditar(canal) {\n        this.esEdicion = true;\n        this.formularioActual = { ...canal };\n        this.mostrarModal = true;\n      },\n      async guardarCanal(formulario) {\n        try {\n          if (this.esEdicion) {\n            // Actualizar canal existente\n            await axios.put(\n              `http://127.0.0.1:8000/api/canales-servicio/${formulario.id}/`,\n              formulario\n            );\n          } else {\n            // Crear nuevo canal\n            await axios.post(\n              'http://127.0.0.1:8000/api/canales-servicio/',\n              formulario\n            );\n          }\n  \n          // Recargar los datos después de guardar\n          await this.cargarDatos();\n          this.mostrarModal = false;\n        } catch (error) {\n          console.error('Error al guardar el canal:', error);\n          if (error.response) {\n            alert(`Error: ${JSON.stringify(error.response.data)}`);\n          } else {\n            alert('Ocurrió un error inesperado.');\n          }\n        }\n      },\n      async eliminarCanal(id) {\n        if (confirm('¿Estás seguro de que deseas eliminar este canal?')) {\n          try {\n            await axios.delete(`http://127.0.0.1:8000/api/canales-servicio/${id}/`);\n            // Eliminar el canal de la lista\n            this.canalesServicio = this.canalesServicio.filter(c => c.id !== id);\n          } catch (error) {\n            console.error('Error al eliminar el canal:', error);\n          }\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Estilos personalizados si es necesario */\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}