{"ast":null,"code":"import NavBar from '../components/Nav.vue';\nimport FooterPage from '../components/Footer.vue';\nimport axios from 'axios';\nexport default {\n  name: 'TransaccionesPage',\n  components: {\n    NavBar,\n    FooterPage\n  },\n  data() {\n    return {\n      transacciones: []\n    };\n  },\n  async created() {\n    await this.cargarTransacciones();\n  },\n  methods: {\n    async cargarTransacciones() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://127.0.0.1:8000/api/transacciones/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.transacciones = response.data;\n      } catch (error) {\n        console.error('Error al cargar transacciones:', error);\n      }\n    },\n    formatFecha(fecha) {\n      // Formatear la fecha para que sea más legible\n      return new Date(fecha).toLocaleDateString('es-ES', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavBar","FooterPage","axios","name","components","data","transacciones","created","cargarTransacciones","methods","token","localStorage","getItem","response","get","headers","Authorization","error","console","formatFecha","fecha","Date","toLocaleDateString","year","month","day","hour","minute"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/views/Transacciones.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen flex flex-col bg-gray-100\">\n      <!-- NavBar -->\n      <NavBar />\n  \n      <!-- Contenido Principal (Ocupa todo el espacio disponible) -->\n      <main class=\"flex-grow container mx-auto p-4\">\n        <h1 class=\"text-3xl font-bold text-green-800 mb-4\">Transacciones</h1>\n        <div class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Lista de Transacciones</h2>\n  \n          <!-- Tabla de Transacciones -->\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Fecha</th>\n                <th class=\"px-4 py-2\">Monto</th>\n                <th class=\"px-4 py-2\">Cliente</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"transaccion in transacciones\" :key=\"transaccion.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ formatFecha(transaccion.fechaTransaccion) }}</td>\n                <td class=\"px-4 py-2 text-center\">${{ transaccion.montoTransaccion }}</td>\n                <td class=\"px-4 py-2 text-center\">${{ transaccion.idCliente }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </main>\n  \n      <!-- Footer (Siempre en la parte inferior) -->\n      <FooterPage />\n    </div>\n  </template>\n  \n  <script>\n  import NavBar from '../components/Nav.vue';\n  import FooterPage from '../components/Footer.vue';\n  import axios from 'axios';\n  \n  export default {\n    name: 'TransaccionesPage',\n    components: {\n      NavBar,\n      FooterPage,\n    },\n    data() {\n      return {\n        transacciones: [],\n      };\n    },\n    async created() {\n      await this.cargarTransacciones();\n    },\n    methods: {\n      async cargarTransacciones() {\n        try {\n          const token = localStorage.getItem('token');\n          const response = await axios.get('http://127.0.0.1:8000/api/transacciones/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.transacciones = response.data;\n        } catch (error) {\n          console.error('Error al cargar transacciones:', error);\n        }\n      },\n      formatFecha(fecha) {\n        // Formatear la fecha para que sea más legible\n        return new Date(fecha).toLocaleDateString('es-ES', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n        });\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Estilos personalizados si es necesario */\n  </style>"],"mappings":"AAqCE,OAAOA,MAAK,MAAO,uBAAuB;AAC1C,OAAOC,UAAS,MAAO,0BAA0B;AACjD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACVJ,MAAM;IACNC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAClC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,0CAA0C,EAAE;UAC3EC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,IAAI,CAACJ,aAAY,GAAIO,QAAQ,CAACR,IAAI;MACpC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDE,WAAWA,CAACC,KAAK,EAAE;MACjB;MACA,OAAO,IAAIC,IAAI,CAACD,KAAK,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACjDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}