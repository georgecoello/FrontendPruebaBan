{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport NavBar from '../components/Nav.vue';\nimport FooterPage from '../components/Footer.vue';\nimport AppModal from '../components/Modal.vue';\nimport axios from 'axios';\nexport default {\n  name: 'MantenimientosPage',\n  components: {\n    NavBar,\n    FooterPage,\n    AppModal\n  },\n  data() {\n    return {\n      tabActual: 'canalesServicio',\n      // Pestaña activa\n      canalesServicio: [],\n      // Lista de canales de servicio\n      agencias: [],\n      // Lista de agencias\n      tiposCliente: [],\n      // Lista de tipos de cliente\n      tiposTransaccion: [],\n      // Lista de tipos de transacción\n      mostrarModalCanal: false,\n      // Controla la visibilidad del modal de canales\n      mostrarModalAgencia: false,\n      // Controla la visibilidad del modal de agencias\n      mostrarModalTipoCliente: false,\n      // Controla la visibilidad del modal de tipos de cliente\n      mostrarModalTipoTransaccion: false,\n      // Controla la visibilidad del modal de tipos de transacción\n      esEdicionCanal: false,\n      // Indica si el modal de canales está en modo edición\n      esEdicionAgencia: false,\n      // Indica si el modal de agencias está en modo edición\n      esEdicionTipoCliente: false,\n      // Indica si el modal de tipos de cliente está en modo edición\n      esEdicionTipoTransaccion: false,\n      // Indica si el modal de tipos de transacción está en modo edición\n      formularioActualCanal: {\n        id: null,\n        codigoCanalServicio: '',\n        nombreCanalServicio: '',\n        idUsuario: null\n      },\n      formularioActualAgencia: {\n        id: null,\n        codigoAgencia: '',\n        nombreAgencia: ''\n      },\n      formularioActualTipoCliente: {\n        id: null,\n        codigoTipoCliente: '',\n        nombreTipoCliente: ''\n      },\n      formularioActualTipoTransaccion: {\n        id: null,\n        codigoTipoTransaccion: '',\n        nombreTipoTransaccion: ''\n      }\n    };\n  },\n  async created() {\n    await this.cargarDatos();\n  },\n  methods: {\n    async cargarDatos() {\n      try {\n        // Cargar canales de servicio\n        const responseCanales = await axios.get('http://127.0.0.1:8000/api/canales-servicio/');\n        this.canalesServicio = responseCanales.data;\n\n        // Cargar agencias\n        const responseAgencias = await axios.get('http://127.0.0.1:8000/api/agencias/');\n        this.agencias = responseAgencias.data;\n\n        // Cargar tipos de cliente\n        const responseTiposCliente = await axios.get('http://127.0.0.1:8000/api/tipos-cliente/');\n        this.tiposCliente = responseTiposCliente.data;\n\n        // Cargar tipos de transacción\n        const responseTiposTransaccion = await axios.get('http://127.0.0.1:8000/api/tipos-transaccion/');\n        this.tiposTransaccion = responseTiposTransaccion.data;\n      } catch (error) {\n        console.error('Error al cargar los datos:', error);\n      }\n    },\n    abrirModalCrearCanal() {\n      this.esEdicionCanal = false;\n      this.formularioActualCanal = {\n        id: null,\n        codigoCanalServicio: '',\n        nombreCanalServicio: '',\n        idUsuario: null\n      };\n      this.mostrarModalCanal = true;\n    },\n    abrirModalEditarCanal(canal) {\n      this.esEdicionCanal = true;\n      this.formularioActualCanal = {\n        ...canal\n      };\n      this.mostrarModalCanal = true;\n    },\n    async guardarCanal(formulario) {\n      try {\n        if (this.esEdicionCanal) {\n          // Actualizar canal existente\n          await axios.put(`http://127.0.0.1:8000/api/canales-servicio/${formulario.id}/`, formulario);\n        } else {\n          // Crear nuevo canal\n          await axios.post('http://127.0.0.1:8000/api/canales-servicio/', formulario);\n        }\n\n        // Recargar los datos después de guardar\n        await this.cargarDatos();\n        this.mostrarModalCanal = false;\n      } catch (error) {\n        console.error('Error al guardar el canal:', error);\n        if (error.response) {\n          alert(`Error: ${JSON.stringify(error.response.data)}`);\n        } else {\n          alert('Ocurrió un error inesperado.');\n        }\n      }\n    },\n    async eliminarCanal(id) {\n      if (confirm('¿Estás seguro de que deseas eliminar este canal?')) {\n        try {\n          await axios.delete(`http://127.0.0.1:8000/api/canales-servicio/${id}/`);\n          // Eliminar el canal de la lista\n          this.canalesServicio = this.canalesServicio.filter(c => c.id !== id);\n        } catch (error) {\n          console.error('Error al eliminar el canal:', error);\n        }\n      }\n    },\n    abrirModalCrearAgencia() {\n      this.esEdicionAgencia = false;\n      this.formularioActualAgencia = {\n        id: null,\n        codigoAgencia: '',\n        nombreAgencia: ''\n      };\n      this.mostrarModalAgencia = true;\n    },\n    abrirModalEditarAgencia(agencia) {\n      this.esEdicionAgencia = true;\n      this.formularioActualAgencia = {\n        ...agencia\n      };\n      this.mostrarModalAgencia = true;\n    },\n    async guardarAgencia(formulario) {\n      try {\n        if (this.esEdicionAgencia) {\n          // Actualizar agencia existente\n          await axios.put(`http://127.0.0.1:8000/api/agencias/${formulario.id}/`, formulario);\n        } else {\n          // Crear nueva agencia\n          await axios.post('http://127.0.0.1:8000/api/agencias/', formulario);\n        }\n\n        // Recargar los datos después de guardar\n        await this.cargarDatos();\n        this.mostrarModalAgencia = false;\n      } catch (error) {\n        console.error('Error al guardar la agencia:', error);\n        if (error.response) {\n          alert(`Error: ${JSON.stringify(error.response.data)}`);\n        } else {\n          alert('Ocurrió un error inesperado.');\n        }\n      }\n    },\n    async eliminarAgencia(id) {\n      if (confirm('¿Estás seguro de que deseas eliminar esta agencia?')) {\n        try {\n          await axios.delete(`http://127.0.0.1:8000/api/agencias/${id}/`);\n          // Eliminar la agencia de la lista\n          this.agencias = this.agencias.filter(a => a.id !== id);\n        } catch (error) {\n          console.error('Error al eliminar la agencia:', error);\n        }\n      }\n    },\n    abrirModalCrearTipoCliente() {\n      this.esEdicionTipoCliente = false;\n      this.formularioActualTipoCliente = {\n        id: null,\n        codigoTipoCliente: '',\n        nombreTipoCliente: ''\n      };\n      this.mostrarModalTipoCliente = true;\n    },\n    abrirModalEditarTipoCliente(tipo) {\n      this.esEdicionTipoCliente = true;\n      this.formularioActualTipoCliente = {\n        ...tipo\n      };\n      this.mostrarModalTipoCliente = true;\n    },\n    async guardarTipoCliente(formulario) {\n      try {\n        if (this.esEdicionTipoCliente) {\n          // Actualizar tipo de cliente existente\n          await axios.put(`http://127.0.0.1:8000/api/tipos-cliente/${formulario.id}/`, formulario);\n        } else {\n          // Crear nuevo tipo de cliente\n          await axios.post('http://127.0.0.1:8000/api/tipos-cliente/', formulario);\n        }\n\n        // Recargar los datos después de guardar\n        await this.cargarDatos();\n        this.mostrarModalTipoCliente = false;\n      } catch (error) {\n        console.error('Error al guardar el tipo de cliente:', error);\n        if (error.response) {\n          alert(`Error: ${JSON.stringify(error.response.data)}`);\n        } else {\n          alert('Ocurrió un error inesperado.');\n        }\n      }\n    },\n    async eliminarTipoCliente(id) {\n      if (confirm('¿Estás seguro de que deseas eliminar este tipo de cliente?')) {\n        try {\n          await axios.delete(`http://127.0.0.1:8000/api/tipos-cliente/${id}/`);\n          // Eliminar el tipo de cliente de la lista\n          this.tiposCliente = this.tiposCliente.filter(t => t.id !== id);\n        } catch (error) {\n          console.error('Error al eliminar el tipo de cliente:', error);\n        }\n      }\n    },\n    abrirModalCrearTipoTransaccion() {\n      this.esEdicionTipoTransaccion = false;\n      this.formularioActualTipoTransaccion = {\n        id: null,\n        codigoTipoTransaccion: '',\n        nombreTipoTransaccion: ''\n      };\n      this.mostrarModalTipoTransaccion = true;\n    },\n    abrirModalEditarTipoTransaccion(tipo) {\n      this.esEdicionTipoTransaccion = true;\n      this.formularioActualTipoTransaccion = {\n        ...tipo\n      };\n      this.mostrarModalTipoTransaccion = true;\n    },\n    async guardarTipoTransaccion(formulario) {\n      try {\n        if (this.esEdicionTipoTransaccion) {\n          // Actualizar tipo de transacción existente\n          await axios.put(`http://127.0.0.1:8000/api/tipos-transaccion/${formulario.id}/`, formulario);\n        } else {\n          // Crear nuevo tipo de transacción\n          await axios.post('http://127.0.0.1:8000/api/tipos-transaccion/', formulario);\n        }\n\n        // Recargar los datos después de guardar\n        await this.cargarDatos();\n        this.mostrarModalTipoTransaccion = false;\n      } catch (error) {\n        console.error('Error al guardar el tipo de transacción:', error);\n        if (error.response) {\n          alert(`Error: ${JSON.stringify(error.response.data)}`);\n        } else {\n          alert('Ocurrió un error inesperado.');\n        }\n      }\n    },\n    async eliminarTipoTransaccion(id) {\n      if (confirm('¿Estás seguro de que deseas eliminar este tipo de transacción?')) {\n        try {\n          await axios.delete(`http://127.0.0.1:8000/api/tipos-transaccion/${id}/`);\n          // Eliminar el tipo de transacción de la lista\n          this.tiposTransaccion = this.tiposTransaccion.filter(t => t.id !== id);\n        } catch (error) {\n          console.error('Error al eliminar el tipo de transacción:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","FooterPage","AppModal","axios","name","components","data","tabActual","canalesServicio","agencias","tiposCliente","tiposTransaccion","mostrarModalCanal","mostrarModalAgencia","mostrarModalTipoCliente","mostrarModalTipoTransaccion","esEdicionCanal","esEdicionAgencia","esEdicionTipoCliente","esEdicionTipoTransaccion","formularioActualCanal","id","codigoCanalServicio","nombreCanalServicio","idUsuario","formularioActualAgencia","codigoAgencia","nombreAgencia","formularioActualTipoCliente","codigoTipoCliente","nombreTipoCliente","formularioActualTipoTransaccion","codigoTipoTransaccion","nombreTipoTransaccion","created","cargarDatos","methods","responseCanales","get","responseAgencias","responseTiposCliente","responseTiposTransaccion","error","console","abrirModalCrearCanal","abrirModalEditarCanal","canal","guardarCanal","formulario","put","post","response","alert","JSON","stringify","eliminarCanal","confirm","delete","filter","c","abrirModalCrearAgencia","abrirModalEditarAgencia","agencia","guardarAgencia","eliminarAgencia","a","abrirModalCrearTipoCliente","abrirModalEditarTipoCliente","tipo","guardarTipoCliente","eliminarTipoCliente","t","abrirModalCrearTipoTransaccion","abrirModalEditarTipoTransaccion","guardarTipoTransaccion","eliminarTipoTransaccion"],"sources":["/home/jorge/Escritorio/Jorge-PC/Prueba Bancooci/frontend/src/views/Mantenimiento.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-100 flex flex-col\">\n      <!-- NavBar -->\n      <NavBar />\n  \n      <!-- Contenido Principal -->\n      <div class=\"container mx-auto p-4 flex-grow\">\n        <h1 class=\"text-3xl font-bold text-green-800 mb-4\">Mantenimientos</h1>\n  \n        <!-- Tabs para seleccionar la tabla a gestionar -->\n        <div class=\"mb-4\">\n          <button\n            @click=\"tabActual = 'canalesServicio'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'canalesServicio',\n              'bg-white text-green-800': tabActual !== 'canalesServicio',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Canales de Servicio\n          </button>\n          <button\n            @click=\"tabActual = 'agencias'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'agencias',\n              'bg-white text-green-800': tabActual !== 'agencias',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Agencias\n          </button>\n          <button\n            @click=\"tabActual = 'tiposCliente'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposCliente',\n              'bg-white text-green-800': tabActual !== 'tiposCliente',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Cliente\n          </button>\n          <button\n            @click=\"tabActual = 'tiposTransaccion'\"\n            :class=\"{\n              'bg-green-600 text-white': tabActual === 'tiposTransaccion',\n              'bg-white text-green-800': tabActual !== 'tiposTransaccion',\n            }\"\n            class=\"px-4 py-2 rounded-t-lg font-bold\"\n          >\n            Tipos de Transacción\n          </button>\n        </div>\n  \n        <!-- Tabla de Canales de Servicio -->\n        <div v-if=\"tabActual === 'canalesServicio'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Canales de Servicio</h2>\n          <button @click=\"abrirModalCrearCanal\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Canal\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"canal in canalesServicio\" :key=\"canal.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ canal.codigoCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ canal.nombreCanalServicio }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"abrirModalEditarCanal(canal)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarCanal(canal.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Agencias -->\n        <div v-if=\"tabActual === 'agencias'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Agencias</h2>\n          <button @click=\"abrirModalCrearAgencia\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nueva Agencia\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Dirección</th>\n                <th class=\"px-4 py-2\">Teléfono</th>                \n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"agencia in agencias\" :key=\"agencia.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ agencia.codigoAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ agencia.nombreAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ agencia.direccionAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ agencia.telefonoAgencia }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"abrirModalEditarAgencia(agencia)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarAgencia(agencia.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Tipos de Cliente -->\n        <div v-if=\"tabActual === 'tiposCliente'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Tipos de Cliente</h2>\n          <button @click=\"abrirModalCrearTipoCliente\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Tipo\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"tipo in tiposCliente\" :key=\"tipo.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ tipo.codigoTipoCliente }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ tipo.nombreTipoCliente }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"abrirModalEditarTipoCliente(tipo)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarTipoCliente(tipo.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Tabla de Tipos de Transacción -->\n        <div v-if=\"tabActual === 'tiposTransaccion'\" class=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h2 class=\"text-xl font-bold text-green-800 mb-4\">Tipos de Transacción</h2>\n          <button @click=\"abrirModalCrearTipoTransaccion\" class=\"bg-green-600 text-white py-2 px-4 rounded-lg font-bold mb-4 hover:bg-green-700 transition duration-300\">\n            Crear Nuevo Tipo\n          </button>\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"bg-green-100\">\n                <th class=\"px-4 py-2\">Código</th>\n                <th class=\"px-4 py-2\">Nombre</th>\n                <th class=\"px-4 py-2\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"tipo in tiposTransaccion\" :key=\"tipo.id\" class=\"border-b\">\n                <td class=\"px-4 py-2 text-center\">{{ tipo.codigoTipoTransaccion }}</td>\n                <td class=\"px-4 py-2 text-center\">{{ tipo.nombreTipoTransaccion }}</td>\n                <td class=\"px-4 py-2 text-center\">\n                  <button @click=\"abrirModalEditarTipoTransaccion(tipo)\" class=\"bg-yellow-500 text-white py-1 px-2 rounded-lg mr-2 hover:bg-yellow-600 transition duration-300\">Editar</button>\n                  <button @click=\"eliminarTipoTransaccion(tipo.id)\" class=\"bg-red-500 text-white py-1 px-2 rounded-lg hover:bg-red-600 transition duration-300\">Eliminar</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n  \n        <!-- Modales -->\n        <AppModal\n          v-if=\"mostrarModalCanal\"\n          :formulario=\"formularioActualCanal\"\n          :esEdicion=\"esEdicionCanal\"\n          @update:formulario=\"guardarCanal\"\n          @close=\"mostrarModalCanal = false\"\n        />\n        <AppModal\n          v-if=\"mostrarModalAgencia\"\n          :formulario=\"formularioActualAgencia\"\n          :esEdicion=\"esEdicionAgencia\"\n          @update:formulario=\"guardarAgencia\"\n          @close=\"mostrarModalAgencia = false\"\n        />\n        <AppModal\n          v-if=\"mostrarModalTipoCliente\"\n          :formulario=\"formularioActualTipoCliente\"\n          :esEdicion=\"esEdicionTipoCliente\"\n          @update:formulario=\"guardarTipoCliente\"\n          @close=\"mostrarModalTipoCliente = false\"\n        />\n        <AppModal\n          v-if=\"mostrarModalTipoTransaccion\"\n          :formulario=\"formularioActualTipoTransaccion\"\n          :esEdicion=\"esEdicionTipoTransaccion\"\n          @update:formulario=\"guardarTipoTransaccion\"\n          @close=\"mostrarModalTipoTransaccion = false\"\n        />\n      </div>\n  \n      <!-- Footer -->\n      <FooterPage />\n    </div>\n  </template>\n  \n  <script>\n  import NavBar from '../components/Nav.vue';\n  import FooterPage from '../components/Footer.vue';\n  import AppModal from '../components/Modal.vue';\n  import axios from 'axios';\n  \n  export default {\n    name: 'MantenimientosPage',\n    components: {\n      NavBar,\n      FooterPage,\n      AppModal,\n    },\n    data() {\n      return {\n        tabActual: 'canalesServicio', // Pestaña activa\n        canalesServicio: [], // Lista de canales de servicio\n        agencias: [], // Lista de agencias\n        tiposCliente: [], // Lista de tipos de cliente\n        tiposTransaccion: [], // Lista de tipos de transacción\n        mostrarModalCanal: false, // Controla la visibilidad del modal de canales\n        mostrarModalAgencia: false, // Controla la visibilidad del modal de agencias\n        mostrarModalTipoCliente: false, // Controla la visibilidad del modal de tipos de cliente\n        mostrarModalTipoTransaccion: false, // Controla la visibilidad del modal de tipos de transacción\n        esEdicionCanal: false, // Indica si el modal de canales está en modo edición\n        esEdicionAgencia: false, // Indica si el modal de agencias está en modo edición\n        esEdicionTipoCliente: false, // Indica si el modal de tipos de cliente está en modo edición\n        esEdicionTipoTransaccion: false, // Indica si el modal de tipos de transacción está en modo edición\n        formularioActualCanal: {\n          id: null,\n          codigoCanalServicio: '',\n          nombreCanalServicio: '',\n          idUsuario: null,\n        },\n        formularioActualAgencia: {\n          id: null,\n          codigoAgencia: '',\n          nombreAgencia: '',\n        },\n        formularioActualTipoCliente: {\n          id: null,\n          codigoTipoCliente: '',\n          nombreTipoCliente: '',\n        },\n        formularioActualTipoTransaccion: {\n          id: null,\n          codigoTipoTransaccion: '',\n          nombreTipoTransaccion: '',\n        },\n      };\n    },\n    async created() {\n      await this.cargarDatos();\n    },\n    methods: {\n      async cargarDatos() {\n        try {\n          // Cargar canales de servicio\n          const responseCanales = await axios.get('http://127.0.0.1:8000/api/canales-servicio/');\n          this.canalesServicio = responseCanales.data;\n  \n          // Cargar agencias\n          const responseAgencias = await axios.get('http://127.0.0.1:8000/api/agencias/');\n          this.agencias = responseAgencias.data;\n  \n          // Cargar tipos de cliente\n          const responseTiposCliente = await axios.get('http://127.0.0.1:8000/api/tipos-cliente/');\n          this.tiposCliente = responseTiposCliente.data;\n  \n          // Cargar tipos de transacción\n          const responseTiposTransaccion = await axios.get('http://127.0.0.1:8000/api/tipos-transaccion/');\n          this.tiposTransaccion = responseTiposTransaccion.data;\n        } catch (error) {\n          console.error('Error al cargar los datos:', error);\n        }\n      },\n      abrirModalCrearCanal() {\n        this.esEdicionCanal = false;\n        this.formularioActualCanal = {\n          id: null,\n          codigoCanalServicio: '',\n          nombreCanalServicio: '',\n          idUsuario: null,\n        };\n        this.mostrarModalCanal = true;\n      },\n      abrirModalEditarCanal(canal) {\n        this.esEdicionCanal = true;\n        this.formularioActualCanal = { ...canal };\n        this.mostrarModalCanal = true;\n      },\n      async guardarCanal(formulario) {\n        try {\n          if (this.esEdicionCanal) {\n            // Actualizar canal existente\n            await axios.put(\n              `http://127.0.0.1:8000/api/canales-servicio/${formulario.id}/`,\n              formulario\n            );\n          } else {\n            // Crear nuevo canal\n            await axios.post(\n              'http://127.0.0.1:8000/api/canales-servicio/',\n              formulario\n            );\n          }\n  \n          // Recargar los datos después de guardar\n          await this.cargarDatos();\n          this.mostrarModalCanal = false;\n        } catch (error) {\n          console.error('Error al guardar el canal:', error);\n          if (error.response) {\n            alert(`Error: ${JSON.stringify(error.response.data)}`);\n          } else {\n            alert('Ocurrió un error inesperado.');\n          }\n        }\n      },\n      async eliminarCanal(id) {\n        if (confirm('¿Estás seguro de que deseas eliminar este canal?')) {\n          try {\n            await axios.delete(`http://127.0.0.1:8000/api/canales-servicio/${id}/`);\n            // Eliminar el canal de la lista\n            this.canalesServicio = this.canalesServicio.filter(c => c.id !== id);\n          } catch (error) {\n            console.error('Error al eliminar el canal:', error);\n          }\n        }\n      },\n      abrirModalCrearAgencia() {\n        this.esEdicionAgencia = false;\n        this.formularioActualAgencia = {\n          id: null,\n          codigoAgencia: '',\n          nombreAgencia: '',\n        };\n        this.mostrarModalAgencia = true;\n      },\n      abrirModalEditarAgencia(agencia) {\n        this.esEdicionAgencia = true;\n        this.formularioActualAgencia = { ...agencia };\n        this.mostrarModalAgencia = true;\n      },\n      async guardarAgencia(formulario) {\n        try {\n          if (this.esEdicionAgencia) {\n            // Actualizar agencia existente\n            await axios.put(\n              `http://127.0.0.1:8000/api/agencias/${formulario.id}/`,\n              formulario\n            );\n          } else {\n            // Crear nueva agencia\n            await axios.post(\n              'http://127.0.0.1:8000/api/agencias/',\n              formulario\n            );\n          }\n  \n          // Recargar los datos después de guardar\n          await this.cargarDatos();\n          this.mostrarModalAgencia = false;\n        } catch (error) {\n          console.error('Error al guardar la agencia:', error);\n          if (error.response) {\n            alert(`Error: ${JSON.stringify(error.response.data)}`);\n          } else {\n            alert('Ocurrió un error inesperado.');\n          }\n        }\n      },\n      async eliminarAgencia(id) {\n        if (confirm('¿Estás seguro de que deseas eliminar esta agencia?')) {\n          try {\n            await axios.delete(`http://127.0.0.1:8000/api/agencias/${id}/`);\n            // Eliminar la agencia de la lista\n            this.agencias = this.agencias.filter(a => a.id !== id);\n          } catch (error) {\n            console.error('Error al eliminar la agencia:', error);\n          }\n        }\n      },\n      abrirModalCrearTipoCliente() {\n        this.esEdicionTipoCliente = false;\n        this.formularioActualTipoCliente = {\n          id: null,\n          codigoTipoCliente: '',\n          nombreTipoCliente: '',\n        };\n        this.mostrarModalTipoCliente = true;\n      },\n      abrirModalEditarTipoCliente(tipo) {\n        this.esEdicionTipoCliente = true;\n        this.formularioActualTipoCliente = { ...tipo };\n        this.mostrarModalTipoCliente = true;\n      },\n      async guardarTipoCliente(formulario) {\n        try {\n          if (this.esEdicionTipoCliente) {\n            // Actualizar tipo de cliente existente\n            await axios.put(\n              `http://127.0.0.1:8000/api/tipos-cliente/${formulario.id}/`,\n              formulario\n            );\n          } else {\n            // Crear nuevo tipo de cliente\n            await axios.post(\n              'http://127.0.0.1:8000/api/tipos-cliente/',\n              formulario\n            );\n          }\n  \n          // Recargar los datos después de guardar\n          await this.cargarDatos();\n          this.mostrarModalTipoCliente = false;\n        } catch (error) {\n          console.error('Error al guardar el tipo de cliente:', error);\n          if (error.response) {\n            alert(`Error: ${JSON.stringify(error.response.data)}`);\n          } else {\n            alert('Ocurrió un error inesperado.');\n          }\n        }\n      },\n      async eliminarTipoCliente(id) {\n        if (confirm('¿Estás seguro de que deseas eliminar este tipo de cliente?')) {\n          try {\n            await axios.delete(`http://127.0.0.1:8000/api/tipos-cliente/${id}/`);\n            // Eliminar el tipo de cliente de la lista\n            this.tiposCliente = this.tiposCliente.filter(t => t.id !== id);\n          } catch (error) {\n            console.error('Error al eliminar el tipo de cliente:', error);\n          }\n        }\n      },\n      abrirModalCrearTipoTransaccion() {\n        this.esEdicionTipoTransaccion = false;\n        this.formularioActualTipoTransaccion = {\n          id: null,\n          codigoTipoTransaccion: '',\n          nombreTipoTransaccion: '',\n        };\n        this.mostrarModalTipoTransaccion = true;\n      },\n      abrirModalEditarTipoTransaccion(tipo) {\n        this.esEdicionTipoTransaccion = true;\n        this.formularioActualTipoTransaccion = { ...tipo };\n        this.mostrarModalTipoTransaccion = true;\n      },\n      async guardarTipoTransaccion(formulario) {\n        try {\n          if (this.esEdicionTipoTransaccion) {\n            // Actualizar tipo de transacción existente\n            await axios.put(\n              `http://127.0.0.1:8000/api/tipos-transaccion/${formulario.id}/`,\n              formulario\n            );\n          } else {\n            // Crear nuevo tipo de transacción\n            await axios.post(\n              'http://127.0.0.1:8000/api/tipos-transaccion/',\n              formulario\n            );\n          }\n  \n          // Recargar los datos después de guardar\n          await this.cargarDatos();\n          this.mostrarModalTipoTransaccion = false;\n        } catch (error) {\n          console.error('Error al guardar el tipo de transacción:', error);\n          if (error.response) {\n            alert(`Error: ${JSON.stringify(error.response.data)}`);\n          } else {\n            alert('Ocurrió un error inesperado.');\n          }\n        }\n      },\n      async eliminarTipoTransaccion(id) {\n        if (confirm('¿Estás seguro de que deseas eliminar este tipo de transacción?')) {\n          try {\n            await axios.delete(`http://127.0.0.1:8000/api/tipos-transaccion/${id}/`);\n            // Eliminar el tipo de transacción de la lista\n            this.tiposTransaccion = this.tiposTransaccion.filter(t => t.id !== id);\n          } catch (error) {\n            console.error('Error al eliminar el tipo de transacción:', error);\n          }\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Estilos personalizados si es necesario */\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}